Messsages
=========

lame pts setup
--------------

Alas we need to re-register PTS because the tear-down after the unit tests
will clear the component architecture registry.

  >>> cp = self.app.Control_Panel
  >>> from zope.component import provideUtility
  >>> from Products.PlacelessTranslationService.interfaces import IPlacelessTranslationService
  >>> provideUtility(cp.TranslationService, IPlacelessTranslationService)

add custom translation
----------------------

A Plone site has many translation domains available.  By default,
they're all global, but they can be overridden, so to allow through
the web customization of translations by the user.

By default, we have 'plonelocales' translation domain.  Let's try and
look up 'April' in Danish:

  >>> from zope import component
  >>> from zope.i18n.interfaces import ITranslationDomain
  >>> domain = component.getUtility(ITranslationDomain, name='plonelocales')
  >>> domain.translate(u'month_apr', target_language='da')
  u'april'

Add a custom translation for this message.
  
  >>> from plone.app.i18n import messages
  >>> messages.customize_translation(msgid=u'month_apr',
  ...                                msg=u'April',
  ...			             domain='plonelocales',
  ...			             language='da')


This should register a local translation domain. Let's get it.
  
  >>> local_domain = component.getUtility(ITranslationDomain,
  ...                                     name='plonelocales')
  >>> local_domain is not domain
  True
  >>> local_domain.translate(u'month_apr', target_language='da')
  u'April'

query existing translations
---------------------------

We can query for existing messages to identify message ids that we
want to translate.  E.g. the message id for 'April' is 'month_apr',
but users don't know about ids.

  >>> from pprint import pprint
  >>> pprint(messages.query_message(query=u'April', language='da')) # doctest: +ELLIPSIS
  [{'domain': 'plone',
    'language': 'da',
    'mod_time': 0,
    'msgid': u'month_apr',
    'msgstr': u'april'},
   {'domain': 'plonelocales',
    'language': 'da',
    'mod_time': ...,
    'msgid': u'month_apr',
    'msgstr': u'April'}]  

We won't be able to query default strings since they're not registered as translations:
    
  >>> pprint(messages.query_message(query=u'Thanks for using our product, we hope '
  ...                               'you like it!', language='en'))
  []

But let's try it in French:
  
  >>> pprint(messages.query_message(query=u'Avant de commencer',
  ...                               language='fr')) # doctest: +ELLIPSIS
  [{'domain': u'plonefrontpage',
    'language': u'fr',
    'mod_time': ...,
    'msgid': u'front-text',
    'msgstr': u'...Avant de commencer...'}]  

A more complex example. Here we query for a text where part of it is contained
in an HTML-tag. We want to allow this, since users won't be able to see that
the message is composed in HTML.

  >>> pprint(messages.query_message("""
  ... Aggiungi i tuoi siti all' elenco di siti Plone
  ... """, language='it')) # doctest: +ELLIPSIS
  [{'domain': u'plonefrontpage',
    'language': u'it',
    'mod_time': ...,
    'msgid': u'front-text',
    'msgstr': u'...Prima di cominciare a esplorare...'}]

We can also query message ids (for technical users):

  >>> pprint(messages.query_message(query=u'month_jan', language='da'))
  [{'domain': 'plone',
    'language': 'da',
    'mod_time': 0,
    'msgid': u'month_jan_abbr',
    'msgstr': u'jan'},
   {'domain': 'plone',
    'language': 'da',
    'mod_time': 0,
    'msgid': u'month_jan',
    'msgstr': u'januar'}]
